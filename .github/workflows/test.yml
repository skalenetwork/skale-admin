name: Test
on: [push, pull_request]
env:
  ETH_PRIVATE_KEY: ${{ secrets.ETH_PRIVATE_KEY }}
  SCHAIN_TYPE: ${{ secrets.SCHAIN_TYPE }}
  MANAGER_TAG: "1.9.3-beta.0"
  IMA_TAG: "1.3.4-beta.5"
  SGX_WALLET_TAG: "1.83.0-beta.5"
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  PYTHON_VERSION: 3.8
jobs:
  test_core:
    runs-on: ubuntu-latest
    env:
      ETH_PRIVATE_KEY: ${{ secrets.ETH_PRIVATE_KEY }}
      ENDPOINT: ${{ secrets.ENDPOINT }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SCHAIN_TYPE: ${{ secrets.SCHAIN_TYPE }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install python dependencies
        run: bash ./scripts/install_python_dependencies.sh
      - name: Lint with flake8
        run: flake8 .
      - name: Launch anvil node
        run: |
          docker run -d --network host --name anvil ghcr.io/foundry-rs/foundry anvil && sleep 5 && docker logs anvil --tail 1000
      - name: Deploy manager & ima contracts
        run: |
          bash ./helper-scripts/deploy_test_ima.sh
          docker rmi -f skalenetwork/skale-manager:${{ env.MANAGER_TAG }}
      - name: Show stats before tests
        if: always()
        run: | 
          sudo lsblk -f
          sudo free -h
      - name: Run core tests
        run: |
          bash ./scripts/run_core_tests.sh
      - name: Show stats after tests
        if: always()
        run: | 
          sudo lsblk -f
          sudo free -h
      - name: Run codecov
        run: |
          codecov -t $CODECOV_TOKEN
