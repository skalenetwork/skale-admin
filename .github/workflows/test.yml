name: Test
on: [push, pull_request]
env:
  ETH_PRIVATE_KEY: ${{ secrets.ETH_PRIVATE_KEY }}
  SCHAIN_TYPE: ${{ secrets.SCHAIN_TYPE }}
  MANAGER_TAG: "1.10.0-v1.10.0.0"
  IMA_TAG: "1.3.4-beta.5"
  SGX_WALLET_TAG: "1.83.0-beta.5"
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  PYTHON_VERSION: 3.11

jobs:
  test_core:
    runs-on: self-hosted
    env:
      ETH_PRIVATE_KEY: ${{ secrets.ETH_PRIVATE_KEY }}
      ENDPOINT: http://127.0.0.1:8545
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SCHAIN_TYPE: ${{ secrets.SCHAIN_TYPE }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python
        run: |
          pwd
          ls -altr
          source ~/ga/bin/activate

      - name: Check python version
        run: |
          python --version

      - name: Install python dependencies
        run: bash ./scripts/install_python_dependencies.sh

      - name: Lint with flake8
        run: flake8 .

      - name: Launch anvil node
        run: |
          docker run -d --network host --name anvil ghcr.io/foundry-rs/foundry anvil && sleep 5 && docker logs anvil --tail 1000

      - name: Deploy manager & ima contracts
        run: |
          bash ./helper-scripts/deploy_test_ima.sh

      - name: Cleanup skale-manager image
        run: |
          docker rmi -f skalenetwork/skale-manager:${{ env.MANAGER_TAG }}

      - name: Show stats before tests
        if: always()
        run: | 
          sudo lsblk -f
          sudo free -h

      - name: Run core tests
        run: |
          bash ./scripts/run_core_tests.sh

      - name: Cleanup docker artifacts
        run: |
          docker rm -f $(docker ps -aq)
          docker rmi -f $(docker images -q)

      - name: Show stats after core tests
        if: always()
        run: |
          sudo lsblk -f
          sudo free -h

      - name: Run firewall tests
        run: |
          bash ./scripts/run_firewall_test.sh

      - name: Show stats after firewall tests
        if: always()
        run: | 
          sudo lsblk -f
          sudo free -h

      - name: Cleanup
        if: always()
        run: | 
          docker rm -f anvil

      - name: Run codecov
        run: |
          codecov -t $CODECOV_TOKEN
