language: python
python:
  - '3.6'
os: linux
dist: bionic
services:
  - docker
cache: pip
env:
  global:
    - NODE_OPTIONS="--max_old_space_size=4096"
    - PYTHONPATH=.
    - ETH_PRIVATE_KEY=$TESTNET_PRIVATE_KEY
install:
  - pip install -r requirements.txt
  - pip install -r requirements-dev.txt
#before_script:
#  - "flake8 ."
jobs:
  include:
    - stage: test
      script:
        - git clone https://${CI_USER_TOKEN}@github.com/skalenetwork/skale-manager.git
        - cd skale-manager/
        - yarn install
        - ENDPOINT=$ENDPOINT_HTTP PRIVATE_KEY=$TESTNET_PRIVATE_KEY npx truffle migrate --network SKALE_private_testnet
        - cp data/SKALE_private_testnet.json ../tests/test_abi.json && cd ..
        - ./scripts/run-tests.sh
    - stage: deploy
      if: branch IN (develop, beta, stable, master)
      script:
        - VERSION=$(BRANCH=$TRAVIS_BRANCH bash ./scripts/calculate_version.sh)
        - echo "Version $VERSION"
        - export VERSION=$VERSION
        - export RELEASE=true
        - bash ./scripts/build.sh
      before_deploy:
        # Set up git user name and tag this commit
        - (
          test ! $TRAVIS_TAG &&
          git config --local user.name "skale-travis" &&
          git config --local user.email "$GITHUB_EMAIL" &&
          export TRAVIS_TAG=$VERSION &&
          git tag "$TRAVIS_TAG" &&
          git push https://$GITHUB_OAUTH_TOKEN@github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_TAG
          ) || true
      deploy:
        - provider: releases
          api_key: "$GITHUB_OAUTH_TOKEN"
          skip_cleanup: true
          name: $VERSION @ $(date +'%d.%m.%Y %R')
          on:
            repo: $TRAVIS_REPO_SLUG
            branch: master
        - provider: releases
          api_key: "$GITHUB_OAUTH_TOKEN"
          skip_cleanup: true
          prerelease: true
          name: $VERSION @ $(date +'%d.%m.%Y %R')
          on:
            repo: $TRAVIS_REPO_SLUG
            branch:
              - master
              - develop
              - beta
        - provider: script
          skip_cleanup: true
          script: RELEASE=true bash $TRAVIS_BUILD_DIR/scripts/publish.sh
          on:
            repo: $TRAVIS_REPO_SLUG
            branch:
              - master
        - provider: script
          skip_cleanup: true
          script: RELEASE=false bash $TRAVIS_BUILD_DIR/scripts/publish.sh
          on:
            repo: $TRAVIS_REPO_SLUG
            branch:
              - develop
              - beta
